变态跳台阶：
一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。 
class Solution {
public:
    int jumpFloorII(int number) {
        //return pow(2,number-1);
        //利用移位运算符计算2^(n-1)
        int a=1;
        return a<<(number-1);
    }
};
跳台阶：
一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。
class Solution {
public:
    int FibFloor(int n)
    {
        if(n==1)
        {
            return 1;
        }
        else if(n==2)
        {
            return 2;
        }
        else
        {
            return (FibFloor(n-1)+FibFloor(n-2));
        }
    }
    int jumpFloor(int number) {
        return FibFloor(number);
    }
};