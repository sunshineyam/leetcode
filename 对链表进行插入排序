题目描述：
插入排序的动画演示如上。从第一个元素开始，该链表可以被认为已经部分排序（用黑色表示）。
每次迭代时，从输入数据中移除一个元素（用红色表示），并原地将其插入到已排好序的链表中。

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* insertionSortList(ListNode* head) {
        if(head==NULL)
            return NULL;
        ListNode* newhead=new ListNode(0);
        newhead->next=head;
        ListNode* prev=head;
        ListNode* cur=head->next;
        while(cur)
        {
            if(cur->val>=prev->val)
            {
                prev=cur;
                cur=cur->next;
            }
            else
            {
                //定义node，让cur与node--cur之间的所有节点比较 
                ListNode* node=newhead;
                while(cur->val>node->next->val)
                {
                    //ListNode* newprev=node;
                    node=node->next;
                }
                //注意每个节点指向的先后顺序 
                prev->next=cur->next;
                cur->next=node->next;
                node->next=cur;
                cur=prev->next;
            }
        }
        ListNode* curhead=newhead->next;
        delete newhead;
        return curhead;
    }
};