现在有两个好友A和B，住在一片长有蘑菇的由n＊m个方格组成的草地，A在(1,1),B在(n,m)。现在A想要拜访B，
由于她只想去B的家，所以每次她只会走(i,j+1)或(i+1,j)这样的路线，在草地上有k个蘑菇种在格子里
(多个蘑菇可能在同一方格),问：A如果每一步随机选择的话(若她在边界上，则只有一种选择)，那么她不碰到蘑菇走到B的家的概率是多少？
#include <iostream>
#include <vector>
#include <iomanip>
using namespace std;
int main()
{
    int N, M;
    while(cin >> N >> M)
    {
        vector<vector<int>> v(N+1,vector<int>(M+1,0));
        vector<vector<double>> pro(N+1, vector<double>(M+1));
        int K;
        cin >> K;
        int x,y;
        //输入k个蘑菇,蘑菇位置都置为1
        for(int i = 0; i < K; i++)
        {
            cin >> x >> y;
            v[x][y] = 1;
        }
        //起始位置概率是1
        pro[1][1] = 1.0;
        for(int i = 1; i <= N; i++)
        {
            for(int j = 1; j <= M; j++)
            {
                //不计算起点的概率
                if(!(i == 1 && j == 1))
                {
                    pro[i][j] = pro[i-1][j] * (j == M ? 1 : 0.5)
                        + pro[i][j-1] * (i == N ? 1 : 0.5);
                    if(v[i][j] == 1)
                        pro[i][j] = 0;
                }
            }
        }
        cout<< fixed << setprecision(2) << pro[N][M] << endl;
    }
    return 0;
}