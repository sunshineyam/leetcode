#include <iostream>
#include <vector>
#include <cmath>
//解法1
using namespace std;
int main()
{
    int A,B;
    while(cin>>A>>B)
    {
        vector<int> v;
        int maxcom=0;
        if(A%B==0)
            cout<<A<<endl;
        else if(B%A==0)
            cout<<B<<endl;
        else
        {
            int Minnum=min(A,B);
            //找出A和B的公因数
            for(int i=2;i<Minnum;i++)
            {
                if(A%i==0 && B%i==0)
                    v.push_back(i);
            }
            //两个数都是质数或者最小的数是2且不是最大数的因数
            if(v.empty())
            {
                cout<<A*B<<endl;
            }
            else
            {
                //找出A和B的最大公因数
                for(int i=0;i<v.size();i++)
                {
                    if(v[i]>=maxcom)
                        maxcom=v[i];
                }
            }
            if(maxcom)
            {
                int num=A/maxcom;
                cout<<num*B<<endl;
            }
        }
    }
    return 0;
}
//解法2：
#include <iostream>
using namespace std;
//找出最大公因数
int gcd(int a,int b)
{
    while(a%b)
    {
        int tmp=a;
        a=b;
        //模完之后的值是两个数的最大公因数
        b=tmp%a;
    }
    return b;
}
int main()
{
    int A,B;
    while(cin>>A>>B)
    {
		//最小公倍数==A*(B/两个数的最大公因数)
        cout<<A*B/gcd(A,B)<<endl;
    }
    return 0;
}