链表分割
编写代码，以给定值x为基准将链表分割成两部分，所有小于x的结点排在大于或等于x的结点之前
给定一个链表的头指针 ListNode* pHead，请返回重新排列后的链表的头指针。注意：分割以后保持原来的数据顺序不变。
/*
struct ListNode {
    int val;
    struct ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};*/
class Partition {
public:
    ListNode* partition(ListNode* pHead, int x) {
        // write code here
        if(pHead==NULL && pHead->next==NULL)
            return pHead;
        ListNode* cur=pHead;
        ListNode* lhead=new ListNode(0);
        ListNode* ghead=new ListNode(0);
        ListNode* gtail,*ltail;
        ltail=lhead;
        gtail=ghead;
        while(cur)
        {
            if(cur->val<x)
            {
                ltail->next=cur;
                ltail=ltail->next;
            }
            else
            {
                gtail->next=cur;
                gtail=gtail->next;
            }
            cur=cur->next;
        }
        gtail->next=NULL;
        ltail->next=ghead->next;
        return lhead->next;
        delete lhead;
        delete ghead;
    }
};