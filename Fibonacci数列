题目描述:
在Fibonacci数列中的数我们称为Fibonacci数。给你一个N，
你想让其变为一个Fibonacci数，每一步你可以把当前数字X变为X-1或者X+1，现在给你一个数N求最少需要多少步可以变为Fibonacci数。
#include <iostream>
#include <algorithm>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int f0,f1,f,step,temp;
    f0=0;
    f1=1;
    while(1)
    {
        f=f0+f1;
        f0=f1;
        f1=f;
        //判断n离哪个斐波那契数列最近，每步的步长是1，所以n-f的差就是所求的最少步数
        if(f<n)
        {
            temp=n-f;
        }
        else
        {
            step=f-n;
            break;
        }
    }
    cout<<min(step,temp)<<endl;
    return 0;
}