class Solution {
public:
    string addStrings(string num1, string num2) {
        int index1=num1.size()-1;
        int index2=num2.size()-1;
        int next=0;
        string retstr;
        while(index1>=0||index2>=0)
        {
            int val1=0;
            int val2=0;
            if(index1>=0)
            {
                //把每个数字从ASC||码值转换为普通数字
                val1=num1[index1]-'0';
                --index1;
            }
            if(index2>=0)
            {
                val2=num2[index2]-'0';
                --index2;
            }
            int addret=val1+val2+next;
            if(addret>9)
            {
                addret=addret%10;
                next=1;
            } 
            else
                next=0;
            //retstr=addret+'0';若这样写，retstr最后只是最后一个字符；
            retstr+=(addret+'0');
        }
        
        if(next==1)
            retstr+='1';
        reverse(retstr.begin(),retstr.end());
        return retstr;
    }
    
    string multiply(string num1, string num2) {
        string retstr="0";
        if(num1=="0"||num2=="0")
            return retstr;
        int index1=num1.size()-1;
        
        int place1=0;
        while(index1>=0)
        {
            int val1=num1[index1]-'0';
            
            string sum="0";
            int place2=0;
            int index2=num2.size()-1;
            while(index2>=0)
            {
                int val2=num2[index2]-'0';
                int num;
                num = val1*val2;
                string ch;
                
                int rem=num%10;
                int next=num/10;
                if(next!=0)
                {
                    ch+=(next+'0');  
                    ch+=(rem+'0');
                }
                else
                    if(rem!=0)
                            ch+=(rem+'0');
                
                
                int i=0;
                if(next!=0||rem!=0)
                {
                    while(i<place2)
                    {
                        ch+='0';
                        ++i;
                    }
                }
                
                
                sum=addStrings(sum,ch);
                
                index2--;
                place2++;
            }
            int i=0;
            while(i<place1)
            {
                sum+='0';
                ++i;
            }
            
            
            retstr=addStrings(sum,retstr);
            
            
            
            index1--;
            place1++;
        }
        return retstr;
    }
};