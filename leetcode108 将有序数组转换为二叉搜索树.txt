leetcode108 将有序数组转换为二叉搜索树
题目描述：
将一个按照升序排列的有序数组，转换为一棵高度平衡二叉搜索树。
本题中，一个高度平衡二叉树是指一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过 1。
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return _sortedArrayToBST(nums,0,nums.size()-1);
    }
    TreeNode* _sortedArrayToBST(vector<int>& nums,int begin,int end) {
        //递归的出口
        if(end < begin)
        {
            return NULL;
        } 
        int mid = begin + (end-begin)/2;
        TreeNode* root = new TreeNode(nums[mid]);
        root->left = _sortedArrayToBST(nums,begin,mid-1);
        root->right = _sortedArrayToBST(nums,mid+1,end);
        return root;
    }
};