题目描述
二货小易有一个W*H的网格盒子，网格的行编号为0~H-1，网格的列编号为0~W-1。每个格子至多可以放一块蛋糕，任意两块蛋糕的欧几里得距离不能等于2。
对于两个格子坐标(x1,y1),(x2,y2)的欧几里得距离为:
( (x1-x2) * (x1-x2) + (y1-y2) * (y1-y2) ) 的算术平方根
小易想知道最多可以放多少块蛋糕在网格盒子里。
解法1：
#include <iostream>
#include <vector>
using namespace std;
int main()
{
    int row,col;
    while(cin>>row>>col)
    {
        vector<vector<int>> vv(row,vector<int>(col,0));
        int count=0;
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(vv[i][j]==0)
                {
                    count++;
                    if(i+2<row)
                    {
                        vv[i+2][j]=1;
                    }
                    if(j+2<col)
                    {
                        vv[i][j+2]=1;
                    }
                }
            }
        }
        cout<<count<<endl;
    }
    return 0;
}
解法2：
#include <iostream>
#include <vector>
using namespace std;
int main()
{
    int row,col;
    int array[1000][1000]={0};
    while(cin>>row>>col)
    {
        for(int i=0;i<row;i++)
        {
            //横向判断
            if(i%4==0 || i%4==1)
            {
                for(int j=0;j<col;j++)
                {
                    if(j%4==0 || j%4==1)
                    {
                        array[i][j]=1;
                    }
                }
            }
            //纵向判断
            else
            {
                for(int j=0;j<col;j++)
                {
                    if(j%4==2 || j%4==3)
                    {
                        array[i][j]=1;
                    }
                }
            }
        }
        int num=0;
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(array[i][j]==1)
                    num++;
            }
        }
        cout<<num<<endl;
        return 0;
    }
}

