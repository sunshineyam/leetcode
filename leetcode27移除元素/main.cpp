//给定一个数组 nums 和一个值 val，你需要原地移除所有数值等于 val 的元素，返回移除后数组的新长度。
//不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。
//元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。
//给定 nums = [3, 2, 2, 3], val = 3,
//函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。

class Solution {
public:
	int removeElement(vector<int>& nums, int val) {
		if (nums.size() == 0)
			return 0;
		size_t count = 0;
		for (int i = 0; i<nums.size(); i++)
		{
			/*if(nums[i]!=val)
			{
			nums[count]=nums[i];
			count++;
			}*/
			if (nums[i] == val)
			{
				nums.erase(nums.begin() + i);
				//erase之后，为了防止迭代器失效，i会指向vector的下一个位置
				i--;
			}
		}
		return nums.size();
	}
};