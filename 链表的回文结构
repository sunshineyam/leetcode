链表的回文结构：
 对于一个链表，请设计一个时间复杂度为O(n),额外空间复杂度为O(1)的算法，判断其是否为回文结构。
给定一个链表的头指针A，请返回一个bool值，代表其是否为回文结构。保证链表长度小于等于900。 
/*
struct ListNode {
    int val;
    struct ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};*/
class PalindromeList {
public:
    bool chkPalindrome(ListNode* A) {
        // write code here
        if(A==NULL)
            return true;
        ListNode* cur=A;
        ListNode* newhead=A;
        while(cur)
        {
            St.push(cur->val);
            cur=cur->next;
        }
        int top=St.top();
        while(!St.empty() && newhead->val==top)
        {
            St.pop();
            top=St.top();
            newhead=newhead->next;
        }
        //若是奇数，则此时栈里面只剩一个节点
        if(!St.empty())
        {
            St.pop();
            if(St.empty())
            {
                return true;
            }
            else
                return false;
        }
        else
            return true;
    }
private:
    stack<int> St;
};

    添加笔记
    求解答(35)
    收藏
    分享

